name: CI/CD Pipeline with Trivy and K8s Deploy

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

env:
  IMAGE_REPO: devopsaket/demo
  AWS_REGION: ap-south-1
  CLUSTER_NAME: testing-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set Image Version
      - name: Generate Image Version Tag
        id: version
        run: echo "VERSION=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # Install Trivy
      - name: Install Trivy
        run: |
          echo "Installing Trivy via AquaSec installer..."
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      # Run Trivy Vulnerability Scan
      - name: Run Trivy Scan
        run: |
          echo "Running vulnerability scan on image..."
          docker build -t $IMAGE_REPO:${{ env.VERSION }} .
          trivy image --exit-code 0 --severity CRITICAL,HIGH $IMAGE_REPO:${{ env.VERSION }}

      # Docker Login
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker Image
      - name: Push Docker Image
        run: |
          docker push $IMAGE_REPO:${{ env.VERSION }}

      # Update Kubernetes Manifest with New Image
      - name: Update Kubernetes Deployment File
        run: |
          sed -i "s|image: $IMAGE_REPO:.*|image: $IMAGE_REPO:${{ env.VERSION }}|g" k8s/deploy/deployment.yaml
          cat k8s/deploy/deployment.yaml

      # Commit Updated Manifest to Repo
      - name: Commit Updated Manifest
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git checkout main
          git add k8s/deploy/deployment.yaml
          git commit -m "Update image tag to $IMAGE_REPO:${{ env.VERSION }}"
          git push origin main

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Setup kubeconfig and Apply to EKS
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}

      # Apply Sealed Secrets
      - name: Apply Sealed Secrets to Cluster
        run: |
          kubectl apply -f k8s/secrets/mysealedsecret.yaml
          echo "âœ… Sealed Secrets applied"

      # Apply Deployment
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deploy/deployment.yaml
